import 'package:flutter/material.dart';
// üáπüá≠ ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Localization üáπüá≠
import 'package:flutter_localizations/flutter_localizations.dart'; 

import 'package:movie_cinema/login.dart';
import 'home_screen.dart';
import 'showtimes_screen.dart';
import 'seat_screen.dart';
import 'profile.dart';

import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';
import 'package:firebase_auth/firebase_auth.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MovieApp());
}

class MovieApp extends StatelessWidget {
  const MovieApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Movie Booking',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.red),
        useMaterial3: true,
      ),

      // =====================================
      // üáπüá≠ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Localization (Locale) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ üáπüá≠
      // =====================================
      localizationsDelegates: const [
        // Delegates ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Material/Widgets/Cupertino
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],

      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Locale ‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏õ‡∏Ø ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
      supportedLocales: const [
        Locale('en', 'US'), // ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
        Locale('th', 'TH'), // ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
      ],

      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Locale ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ ShowtimesScreen ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)
      locale: const Locale('th', 'TH'), 
      
      // =====================================

      // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
      home: StreamBuilder<User?>(
        stream: FirebaseAuth.instance.authStateChanges(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Scaffold(
              body: Center(child: CircularProgressIndicator()),
            );
          }
          // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà) ‡πÑ‡∏õ‡∏ó‡∏µ‡πà HomeScreen
          if (snapshot.hasData) {
            return const HomeScreen();
          }
          // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô) ‡πÑ‡∏õ‡∏ó‡∏µ‡πà LoginScreen
          return const LoginScreen();
        },
      ),
      
      routes: {
        '/login': (context) => const LoginScreen(),
        '/showtimes': (context) {
          // üí° ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ args ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô null ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
          final args = ModalRoute.of(context)?.settings.arguments as Map<String, dynamic>?;
          if (args == null) {
            // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ argument ‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏î‡∏á Error
            return const HomeScreen(); 
          }
          return ShowtimesScreen(movie: args);
        },
        // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: Route /seats ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏à‡∏≤‡∏Å Illegal Character ‡πÅ‡∏•‡πâ‡∏ß
        '/seats': (context) {
          final args = ModalRoute.of(context)?.settings.arguments as Map<String, dynamic>?;
          if (args == null) {
            // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ argument ‡∏™‡πà‡∏á‡∏°‡∏≤
            return const HomeScreen(); 
          }

          // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å Map args ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ 
          // ‡πÉ‡∏ä‡πâ as String? ?? 'N/A' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ Default ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠ key ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
          final movieTitle = args['movieTitle'] as String? ?? 'N/A';
          final cinemaName = args['cinemaName'] as String? ?? 'N/A';
          final screenType = args['screenType'] as String? ?? 'N/A';
          final selectedTime = args['selectedTime'] as String? ?? 'N/A';
          final selectedDate = args['selectedDate'] as String? ?? 'N/A';
          
          // ‡∏™‡πà‡∏á argument ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á SeatScreen
          return SeatScreen(
            movieTitle: movieTitle,
            cinemaName: cinemaName,
            screenType: screenType,
            selectedTime: selectedTime,
            selectedDate: selectedDate,
            showtimeData: args, // showtimeData ‡∏Ñ‡∏∑‡∏≠ args ‡∏ó‡∏±‡πâ‡∏á‡∏Å‡πâ‡∏≠‡∏ô
          );
        },
        '/profile': (context) => const ProfileScreen(),
      },
    );
  }
}
